//== URCLInstPrinter.h - Convert URCL MCInst to assembly syntax -*- C++ -*-=//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a URCL MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_URCL_INSTPRINTER_URCLINSTPRINTER_H
#define LLVM_LIB_TARGET_URCL_INSTPRINTER_URCLINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {


class URCLInstPrinter : public MCInstPrinter {
public:
  URCLInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                   const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printRegName(raw_ostream &OS, unsigned RegNo) const override;
  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot, const MCSubtargetInfo &STI, raw_ostream &O) override;

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);
  void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
                               unsigned OpIdx, unsigned PrintMethodIdx, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);

  void printOperand(const MCInst *MI, int opNum,
                    raw_ostream &OS);
  void printMemOperand(const MCInst *MI, int opNum,
                       raw_ostream &OS, const char *Modifier = nullptr);
  //void printAddrModeMemSrc(const MCInst *MI, unsigned OpNum, raw_ostream &O);
  void printCCOperand(const MCInst *MI, int opNum, raw_ostream &O);
  bool printGetPCX(const MCInst *MI, unsigned OpNo,
                   raw_ostream &OS);
  void printMembarTag(const MCInst *MI, int opNum,
                      raw_ostream &O);

  void printAddrMode(const MCInst *MI, uint64_t Address, raw_ostream &O);

};
} // end namespace llvm

#endif // end LLVM_LIB_TARGET_URCL_INSTPRINTER_URCLINSTPRINTER_H